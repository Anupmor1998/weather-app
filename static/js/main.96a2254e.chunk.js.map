{"version":3,"sources":["components/TempApp.js","App.js","reportWebVitals.js","index.js"],"names":["TempApp","useState","city","setCity","search","setSearch","fetchApi","a","url","fetch","response","json","resJSON","className","type","onChange","event","target","value","onClick","class","cod","name","src","weather","icon","alt","main","temp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAqEeA,MAlEf,WAAoB,IAAD,EACOC,mBAAS,MADhB,mBACVC,EADU,KACJC,EADI,OAEWF,mBAAS,IAFpB,mBAEVG,EAFU,KAEFC,EAFE,KAIXC,EAAQ,uCAAG,gCAAAC,EAAA,4DACA,mCACTC,EAFS,2DAEiDJ,EAFjD,+BACA,oCADA,SAKQK,MAAMD,GALd,cAKTE,EALS,gBAMOA,EAASC,OANhB,OAMTC,EANS,OAOfT,EAAQS,GAPO,2CAAH,qDAad,OACE,mCACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,yBAEA,gCACE,4EACA,uBACEA,UAAU,YACVC,KAAK,OACLC,SAbU,SAACC,GACnBX,EAAUW,EAAMC,OAAOC,QAafA,MAAOd,IAET,wBAAQS,UAAU,MAAMM,QAASb,EAAjC,SACE,mBAAGc,MAAM,4BAIZlB,GAAoB,OAAZA,EAAKmB,IACZ,gCACE,oBAAGR,UAAU,QAAb,iCAA0CX,EAAKoB,QAE/C,8BACE,qBACEC,IAAG,0CAAqCrB,EAAKsB,QAAQ,GAAGC,KAArD,QACHC,IAAI,eAGR,sBAAKb,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,wBACA,+BAAKX,EAAKyB,KAAKC,KAAf,eAEF,sBAAKf,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,4BACA,+BAAKX,EAAKyB,KAAKC,KAAf,eAEF,sBAAKf,UAAU,cAAf,UACE,mBAAGA,UAAU,QAAb,4BACA,+BAAKX,EAAKyB,KAAKC,KAAf,kBAIJ,SClDKC,MARf,WACE,OACE,qBAAKhB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96a2254e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../components/Temp.css\";\r\n\r\nfunction TempApp() {\r\n  const [city, setCity] = useState(null);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const fetchApi = async () => {\r\n    const apiKey = \"3c9ab84472c05b6f1dcca909970fe924\";\r\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=${apiKey}`;\r\n    // const url = `https://api.openweathermap.org/data/2.5/forecast?q=${search}&units=metric&appid=${apiKey}`;\r\n\r\n    const response = await fetch(url);\r\n    const resJSON = await response.json();\r\n    setCity(resJSON);\r\n  };\r\n\r\n  const showWeather = (event) => {\r\n    setSearch(event.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"box\">\r\n        <div className=\"header\">Weather App</div>\r\n\r\n        <div>\r\n          <h4>Enter the name of the city to get started!</h4>\r\n          <input\r\n            className=\"inputData\"\r\n            type=\"text\"\r\n            onChange={showWeather}\r\n            value={search}\r\n          />\r\n          <button className=\"btn\" onClick={fetchApi}>\r\n            <i class=\"fas fa-arrow-right\"></i>\r\n          </button>\r\n        </div>\r\n\r\n        {city && city.cod == \"200\" ? (\r\n          <div>\r\n            <p className=\"para1\">Weather Forecast of {city.name}</p>\r\n\r\n            <div>\r\n              <img\r\n                src={`http://openweathermap.org/img/w/${city.weather[0].icon}.png`}\r\n                alt=\"wthr img\"\r\n              />\r\n            </div>\r\n            <div className=\"mid-section\">\r\n              <p className=\"para2\">Temperture</p>\r\n              <h1>{city.main.temp} °C</h1>\r\n            </div>\r\n            <div className=\"mid-section\">\r\n              <p className=\"para2\">Min Temperture</p>\r\n              <h1>{city.main.temp} °C</h1>\r\n            </div>\r\n            <div className=\"mid-section\">\r\n              <p className=\"para2\">Max Temperture</p>\r\n              <h1>{city.main.temp} °C</h1>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TempApp;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TempApp from \"./components/TempApp\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TempApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}